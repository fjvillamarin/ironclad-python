# coding: utf-8

"""
    Ironclad Public API

    Documentation for Ironclad's REST API.

    The version of the OpenAPI document: 1
    Contact: support@ironcladapp.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ironclad_python.models.approval_requests200_response_list_inner import ApprovalRequests200ResponseListInner

class TestApprovalRequests200ResponseListInner(unittest.TestCase):
    """ApprovalRequests200ResponseListInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApprovalRequests200ResponseListInner:
        """Test ApprovalRequests200ResponseListInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApprovalRequests200ResponseListInner`
        """
        model = ApprovalRequests200ResponseListInner()
        if include_optional:
            return ApprovalRequests200ResponseListInner(
                start_time = '2022-09-20T15:51:54.156Z',
                end_time = '2022-09-28T19:21:05.034Z',
                status = 'approved',
                actor_id = '6334b636b9fb1eb6e76ada97',
                actor_type = 'User',
                actor_details = {"userName":{"type":"string","example":"Cave Johnson"},"userEmail":{"type":"string","example":"cave@aperturescience.com"}},
                role = 'approver58348a760b354ab3a986f56a74656c86',
                role_name = 'CEO',
                approval_type = 'Workflow'
            )
        else:
            return ApprovalRequests200ResponseListInner(
        )
        """

    def testApprovalRequests200ResponseListInner(self):
        """Test ApprovalRequests200ResponseListInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
