# coding: utf-8

"""
    Ironclad Public API

    Documentation for Ironclad's REST API.

    The version of the OpenAPI document: 1
    Contact: support@ironcladapp.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.workflows_api import WorkflowsApi


class TestWorkflowsApi(unittest.TestCase):
    """WorkflowsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = WorkflowsApi()

    def tearDown(self) -> None:
        pass

    def test_approval_requests(self) -> None:
        """Test case for approval_requests

        Retrieve the Approval Requests on a Workflow
        """
        pass

    def test_create_a_comment_on_a_workflow(self) -> None:
        """Test case for create_a_comment_on_a_workflow

        Create a Comment on a Workflow
        """
        pass

    def test_create_a_new_workflow_async(self) -> None:
        """Test case for create_a_new_workflow_async

        Create a Workflow Asynchronously
        """
        pass

    def test_deprecated_create_a_comment_on_a_workflow(self) -> None:
        """Test case for deprecated_create_a_comment_on_a_workflow

        Create a Comment on a Workflow
        """
        pass

    def test_launch_a_new_workflow(self) -> None:
        """Test case for launch_a_new_workflow

        Create a Workflow Synchronously
        """
        pass

    def test_list_all_workflow_approvals(self) -> None:
        """Test case for list_all_workflow_approvals

        List All Workflow Approvals
        """
        pass

    def test_list_all_workflow_participants(self) -> None:
        """Test case for list_all_workflow_participants

        List All Workflow Participants
        """
        pass

    def test_list_all_workflow_schemas(self) -> None:
        """Test case for list_all_workflow_schemas

        List All Workflow Schemas
        """
        pass

    def test_list_all_workflow_signers(self) -> None:
        """Test case for list_all_workflow_signers

        List All Workflow Signers
        """
        pass

    def test_list_all_workflows(self) -> None:
        """Test case for list_all_workflows

        List All Workflows
        """
        pass

    def test_retrieve_a_workflow(self) -> None:
        """Test case for retrieve_a_workflow

        Retrieve a Workflow
        """
        pass

    def test_retrieve_a_workflow_document(self) -> None:
        """Test case for retrieve_a_workflow_document

        Retrieve a Workflow Document
        """
        pass

    def test_retrieve_a_workflow_schema(self) -> None:
        """Test case for retrieve_a_workflow_schema

        Retrieve a Workflow Schema
        """
        pass

    def test_retrieve_asynchronous_workflow_status(self) -> None:
        """Test case for retrieve_asynchronous_workflow_status

        Retrieve the Status of an Async Workflow Create Job
        """
        pass

    def test_retrieve_attachment_from_email_thread(self) -> None:
        """Test case for retrieve_attachment_from_email_thread

        Retrieve an Attachment from an Email Thread
        """
        pass

    def test_retrieve_email_thread_from_workflow(self) -> None:
        """Test case for retrieve_email_thread_from_workflow

        Retrieve an Email Thread from a Specified Workflow
        """
        pass

    def test_retrieve_email_threads_from_workflow(self) -> None:
        """Test case for retrieve_email_threads_from_workflow

        Retrieve Email Threads from A Workflow
        """
        pass

    def test_revert_to_review(self) -> None:
        """Test case for revert_to_review

        Revert a Workflow to the Review Step
        """
        pass

    def test_turn_history(self) -> None:
        """Test case for turn_history

        Retrieve the Turn History on a Workflow
        """
        pass

    def test_update_workflow_approval(self) -> None:
        """Test case for update_workflow_approval

        Update Approval on a Workflow
        """
        pass

    def test_update_workflow_metadata(self) -> None:
        """Test case for update_workflow_metadata

        Update Workflow Metadata
        """
        pass


if __name__ == '__main__':
    unittest.main()
