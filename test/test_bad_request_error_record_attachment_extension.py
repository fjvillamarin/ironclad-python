# coding: utf-8

"""
    Ironclad Public API

    Documentation for Ironclad's REST API.

    The version of the OpenAPI document: 1
    Contact: support@ironcladapp.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ironclad_python.models.bad_request_error_record_attachment_extension import BadRequestErrorRecordAttachmentExtension

class TestBadRequestErrorRecordAttachmentExtension(unittest.TestCase):
    """BadRequestErrorRecordAttachmentExtension unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BadRequestErrorRecordAttachmentExtension:
        """Test BadRequestErrorRecordAttachmentExtension
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BadRequestErrorRecordAttachmentExtension`
        """
        model = BadRequestErrorRecordAttachmentExtension()
        if include_optional:
            return BadRequestErrorRecordAttachmentExtension(
                code = 'INVALID_PARAM',
                message = 'filename "NDA - Acme LLC" does not have an accepted extension. Only the following extensions are allowed: .adoc, .asice, .bdoc, .csv, .ddoc, .doc, .docx, .edoc, .eml, .gif, .htm, .jpeg, .jpg, .msg, .pdf, .png, .ppt, .pptx, .rtf, .tif, .tif, .txt, .xls, .xlsx, .xml',
                param = 'metadata.filename'
            )
        else:
            return BadRequestErrorRecordAttachmentExtension(
        )
        """

    def testBadRequestErrorRecordAttachmentExtension(self):
        """Test BadRequestErrorRecordAttachmentExtension"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
