# coding: utf-8

"""
    Ironclad Public API

    Documentation for Ironclad's REST API.

    The version of the OpenAPI document: 1
    Contact: support@ironcladapp.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.deprecated_create_a_comment_on_a_workflow_request import DeprecatedCreateACommentOnAWorkflowRequest

class TestDeprecatedCreateACommentOnAWorkflowRequest(unittest.TestCase):
    """DeprecatedCreateACommentOnAWorkflowRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeprecatedCreateACommentOnAWorkflowRequest:
        """Test DeprecatedCreateACommentOnAWorkflowRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeprecatedCreateACommentOnAWorkflowRequest`
        """
        model = DeprecatedCreateACommentOnAWorkflowRequest()
        if include_optional:
            return DeprecatedCreateACommentOnAWorkflowRequest(
                creator = openapi_client.models.creator_email_model.CreatorEmailModel(
                    type = 'email', 
                    email = 'example@example.com', ),
                comment = '',
                add_users_to_workflow = True,
                replied_to_activity_feed_message_id = ''
            )
        else:
            return DeprecatedCreateACommentOnAWorkflowRequest(
                creator = openapi_client.models.creator_email_model.CreatorEmailModel(
                    type = 'email', 
                    email = 'example@example.com', ),
                comment = '',
        )
        """

    def testDeprecatedCreateACommentOnAWorkflowRequest(self):
        """Test DeprecatedCreateACommentOnAWorkflowRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
