# coding: utf-8

"""
    Ironclad Public API

    Documentation for Ironclad's REST API.

    The version of the OpenAPI document: 1
    Contact: support@ironcladapp.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ironclad_python.models.comment_activity_model import CommentActivityModel

class TestCommentActivityModel(unittest.TestCase):
    """CommentActivityModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommentActivityModel:
        """Test CommentActivityModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommentActivityModel`
        """
        model = CommentActivityModel()
        if include_optional:
            return CommentActivityModel(
                metadata = openapi_client.models.comment_metadata_model.CommentMetadataModel(
                    message = 'This is a comment Jon Snow', 
                    marked_up_message = 'This is a comment @[Jon Snow](630d28059893be00e1ccc9e7)', 
                    added_participants = [
                        openapi_client.models.user_model.UserModel(
                            id = '', 
                            display_name = '', )
                        ], 
                    replied_to = openapi_client.models.comment_metadata_model_replied_to.CommentMetadataModel_repliedTo(
                        activity_item = 'TODO: unsure this is the right place', 
                        author = openapi_client.models.activity_author_model.ActivityAuthorModel(), ), ),
                id = '',
                type = 'comment',
                author = openapi_client.models.activity_author_model.ActivityAuthorModel(),
                is_external = True,
                reactions = openapi_client.models.activity_reaction_model.ActivityReactionModel(
                    emoji_id = 'smile', 
                    reactors = [
                        openapi_client.models.user_model.UserModel(
                            id = '', 
                            display_name = '', )
                        ], )
            )
        else:
            return CommentActivityModel(
                id = '',
                type = 'comment',
                author = openapi_client.models.activity_author_model.ActivityAuthorModel(),
        )
        """

    def testCommentActivityModel(self):
        """Test CommentActivityModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
